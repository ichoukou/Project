/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.11
 * Generated at: 2019-02-21 00:44:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.template;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.xnx3.j2ee.Global;
import com.xnx3.wangmarket.admin.G;

public final class templatePlugin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("jar:file:/E:/github/Project/智慧校园/微官网/yunjianzan/Tomcat8.5/webapps/ROOT/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1550709623293L));
    _jspx_dependants.put("/WEB-INF/lib/xnx3_tld.jar", Long.valueOf(1550709623439L));
    _jspx_dependants.put("jar:file:/E:/github/Project/智慧校园/微官网/yunjianzan/Tomcat8.5/webapps/ROOT/WEB-INF/lib/xnx3_tld.jar!/META-INF/xnx3.tld", Long.valueOf(1495004768000L));
    _jspx_dependants.put("jar:file:/E:/github/Project/智慧校园/微官网/yunjianzan/Tomcat8.5/webapps/ROOT/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.xnx3.j2ee.Global");
    _jspx_imports_classes.add("com.xnx3.wangmarket.admin.G");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../iw/common/head.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("浏览模版插件", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"http://res.weiunity.com/css/layerGlobal.css\" media=\"all\">\r\n");
      out.write("\r\n");
      out.write("<!-- author:管雷鸣 -->\r\n");
      out.write("<style>\r\n");
      out.write(".list{\r\n");
      out.write("\tpadding-left: 50px;\r\n");
      out.write("}\r\n");
      out.write(".list>div{\r\n");
      out.write("\tfloat:left;\r\n");
      out.write("\twidth:48%;\r\n");
      out.write("\tpadding:0.5%;\r\n");
      out.write("\tmin-width: 500px;\r\n");
      out.write("    max-width: 900px;\r\n");
      out.write("}\r\n");
      out.write(".list>div>div{\r\n");
      out.write("\tpadding-bottom: 35px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*预览图*/\r\n");
      out.write(".previewImg{\r\n");
      out.write("\twidth:100%;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("/*预览按钮*/\r\n");
      out.write(".previewButton{\r\n");
      out.write("\tmargin-top: -30px;\r\n");
      out.write("\ttext-align: right;\r\n");
      out.write("\toverflow-x: hidden;\r\n");
      out.write("}\r\n");
      out.write(".previewButton a{\r\n");
      out.write("    background-color: #FF5722;\r\n");
      out.write("    border-radius: 15px;\r\n");
      out.write("    padding: 3px;\r\n");
      out.write("    padding-left: 12px;\r\n");
      out.write("    padding-right: 22px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    color: #eeeeee;\r\n");
      out.write("    font-size: 18px;\r\n");
      out.write("    margin-right: -12px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*模版名字，编号*/\r\n");
      out.write(".templateName{\r\n");
      out.write("\twidth:100%;\r\n");
      out.write("\ttext-align:center;\r\n");
      out.write("\tcolor:#2F4056;\r\n");
      out.write("\tpadding-top: 8px;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("/*模版简介说明*/\r\n");
      out.write(".info{\r\n");
      out.write("\tcolor:#c2c2c2;\r\n");
      out.write("\tpadding: 10px;\r\n");
      out.write("\tpadding-bottom: 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".leftImage{\r\n");
      out.write("\tfloat:left;\r\n");
      out.write("\twidth: 50%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 使用说明 */\r\n");
      out.write(".usedoc{\r\n");
      out.write("\tpadding-left: 10px;\r\n");
      out.write("    text-align: right;\r\n");
      out.write("    padding-right: 10px;\r\n");
      out.write("}\r\n");
      out.write(".usedoc a{\r\n");
      out.write("\tcolor: blue;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"site-title\">\r\n");
      out.write("\t<fieldset><legend><a name=\"fieldset\">云端插件列表</a></legend></fieldset>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"list\" id=\"cloudList\">\r\n");
      out.write("\t加载中...\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("layui.use('element', function(){\r\n");
      out.write("\tvar element = layui.element;\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("//使用某个云端模版，传入其模版名、编号 templateName\r\n");
      out.write("function useTemplatePlugin(pluginName){\r\n");
      out.write("\tvar dtp_confirm = layer.confirm('确定要导入模版插件：'+pluginName+'?', {\r\n");
      out.write("\t  btn: ['立即导入','取消'] //按钮\r\n");
      out.write("\t}, function(){\r\n");
      out.write("\t\tlayer.close(dtp_confirm);\r\n");
      out.write("\t\tiw.loading(\"获取中\");\r\n");
      out.write("\t\t$.post('");
      out.print(basePath );
      out.write("template/restoreTemplatePluginByRemote.do?pluginName='+pluginName, function(data){\r\n");
      out.write("\t\t\tiw.loadClose();\r\n");
      out.write("\t\t\tif(data.result == '1'){\r\n");
      out.write("\t\t\t\ttemplateComparePreview();\r\n");
      out.write("\t\t \t}else if(data.result == '0'){\r\n");
      out.write("\t\t \t\tparent.iw.msgFailure(data.info);\r\n");
      out.write("\t\t \t}else{\r\n");
      out.write("\t\t \t\tparent.iw.msgFailure();\r\n");
      out.write("\t\t \t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t}, function(){\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//弹出模版比对窗口，选择要还原的项\r\n");
      out.write("//url:  相对路径，比如 template/restoreTemplateByRemote.do\r\n");
      out.write("function templateComparePreview(){\r\n");
      out.write("\tlayer.open({\r\n");
      out.write("\t\ttype: 2, \r\n");
      out.write("\t\ttitle:'导入模版插件', \r\n");
      out.write("\t\tarea: ['800px', '560px'],\r\n");
      out.write("\t\tshadeClose: true, //开启遮罩关闭\r\n");
      out.write("\t\tcontent: '");
      out.print(basePath );
      out.write("template/restoreTemplateComparePreview.do'\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//加载云端的模版列表\r\n");
      out.write("function loadCloudTemplateList(){\r\n");
      out.write("\t//若使用云端模版库，则可以将下面请求地址换为 http://wang.market/cloudTemplateList.do\r\n");
      out.write("\t$.getJSON('http://res.weiunity.com/cloudControl/templatePlugin.json',function(obj){\r\n");
      out.write("\t\tvar html = '';\t//云端模版的列表\r\n");
      out.write("\t\t\tif(obj.result == '1'){\r\n");
      out.write("\t\t\t\tvar divArray = new Array();\t//共分2列，也就是下标为0～1\r\n");
      out.write("\t\t\t\tfor(var i=0; i<obj.list.length; i++){\r\n");
      out.write("\t\t\t\t\tvar xiabiao = i%2;\t//取余，得数组下表\r\n");
      out.write("\t\t\t\t\tvar to = obj.list[i];\r\n");
      out.write("\t\t\t\t\tvar temp = '<div><div class=\"leftImage\"><img src=\"http://res.weiunity.com/template_plugin/'+to.name+'/preview.jpg\" class=\"previewImg\" onclick=\"useTemplatePlugin(\\''+to.name+'\\');\"><div class=\"previewButton\"><a href=\"'+to.demoUrl+'\" target=\"_black\">点此预览</a></div></div><div class=\"leftImage\"><div class=\"templateName\" onclick=\"useTemplatePlugin(\\''+to.name+'\\');\">'+to.title+'</div><div class=\"info\">'+to.info+'</div><div class=\"usedoc\"><a href=\"'+to.docUrl+'?MASTER_SITE_URL=");
      out.print(Global.get("MASTER_SITE_URL") );
      out.write("\" target=\"_black\">使用说明</a></div></div></div>';\r\n");
      out.write("\t\t\t\t\t/* var temp = '<div>'+\r\n");
      out.write("\t\t\t\t\t\t\t\t'<img src=\"http://res.weiunity.com/template/'+to.name+'/preview.jpg\" class=\"previewImg\" onclick=\"useCloudTemplate(\\''+to.name+'\\');\" />'+\r\n");
      out.write("\t\t\t\t\t\t\t\t'<div class=\"previewButton\"><a href=\"http://'+to.name+'.wscso.com\" target=\"_black\">点此预览</a></div>'+\r\n");
      out.write("\t\t\t\t\t\t\t\t'<div class=\"templateName\" onclick=\"useCloudTemplate(\\''+to.name+'\\');\">模版编号：'+to.name+'</div>'+\r\n");
      out.write("\t\t\t\t\t\t\t\t'<div class=\"info\">'+to.intro+'</div>'+\r\n");
      out.write("\t\t\t\t\t \t \t\t'</div>';\r\n");
      out.write("\t\t\t\t\t*/ \t\t\r\n");
      out.write("\t\t\t\t\tif(divArray[xiabiao] == null){\r\n");
      out.write("\t\t\t\t\t\tdivArray[xiabiao] = '';\r\n");
      out.write("\t\t\t\t\t}\t \t\t\r\n");
      out.write("\t\t\t\t\tdivArray[xiabiao] = divArray[xiabiao] + temp;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t//将四个div分别遍历，组合成显示的html\r\n");
      out.write("\t\t\t\tfor(var i=0; i<divArray.length; i++){\r\n");
      out.write("\t\t\t\t\thtml = html + '<div>' + divArray[i] +'</div>';\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"cloudList\").innerHTML = html;\r\n");
      out.write("\t     \t}else if(obj.result == '0'){\r\n");
      out.write("\t     \t\t $.toast(obj.info, \"cancel\", function(toast) {});\r\n");
      out.write("\t     \t}else{\r\n");
      out.write("\t     \t\talert(obj.result);\r\n");
      out.write("\t     \t}\r\n");
      out.write("\t\t});\r\n");
      out.write("}\r\n");
      out.write("loadCloudTemplateList();\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
