/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.11
 * Generated at: 2019-02-21 00:44:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.template;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class restoreTemplate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("jar:file:/E:/github/Project/智慧校园/微官网/yunjianzan/Tomcat8.5/webapps/ROOT/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1550709623293L));
    _jspx_dependants.put("/WEB-INF/lib/xnx3_tld.jar", Long.valueOf(1550709623439L));
    _jspx_dependants.put("jar:file:/E:/github/Project/智慧校园/微官网/yunjianzan/Tomcat8.5/webapps/ROOT/WEB-INF/lib/xnx3_tld.jar!/META-INF/xnx3.tld", Long.valueOf(1495004768000L));
    _jspx_dependants.put("jar:file:/E:/github/Project/智慧校园/微官网/yunjianzan/Tomcat8.5/webapps/ROOT/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../iw/common/head.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("还原模版", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"http://res.weiunity.com/css/layerGlobal.css\" media=\"all\">\r\n");
      out.write("\r\n");
      out.write("<!-- author:管雷鸣 -->\r\n");
      out.write("<style>\r\n");
      out.write(".list{\r\n");
      out.write("\tpadding-left: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/*预览图*/\r\n");
      out.write(".previewImg{\r\n");
      out.write("\twidth:100%;\r\n");
      out.write("}\r\n");
      out.write("/*预览按钮*/\r\n");
      out.write(".previewButton{\r\n");
      out.write("\tmargin-top: -30px;\r\n");
      out.write("\ttext-align: right;\r\n");
      out.write("\toverflow-x: hidden;\r\n");
      out.write("}\r\n");
      out.write(".previewButton a{\r\n");
      out.write("    background-color: #AAA752;\r\n");
      out.write("    border-radius: 15px;\r\n");
      out.write("    padding: 3px;\r\n");
      out.write("    padding-left: 12px;\r\n");
      out.write("    padding-right: 22px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    color: #eeeeee;\r\n");
      out.write("    font-size: 14px;\r\n");
      out.write("    margin-right: -12px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*模版名字，编号*/\r\n");
      out.write(".templateName{\r\n");
      out.write("\twidth:100%;\r\n");
      out.write("\ttext-align:center;\r\n");
      out.write("\tcolor:#2F4056;\r\n");
      out.write("\tpadding-top: 8px;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("/*模版简介说明*/\r\n");
      out.write(".info{\r\n");
      out.write("\tcolor:#c2c2c2;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("<div style=\"padding: 12px; padding-left:25px; font-weight: 700;padding-left: 32px;color: red; font-size: 20px;\">\r\n");
      out.write("\t<b>还原模板</b>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div style=\"height:300px;\">\r\n");
      out.write("\t<div style=\"width:47%; padding-right:3%; float:left;\">\r\n");
      out.write("\t\t<div class=\"site-title\">\r\n");
      out.write("\t\t\t<fieldset><legend><a name=\"fieldset\">方案一.从云端恢复</a></legend></fieldset>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"list\" id=\"cloudList\">\r\n");
      out.write("\t\t\t");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div style=\"width:47%; padding-right:3%; float:right;\">\r\n");
      out.write("\t\t<div class=\"site-title\">\r\n");
      out.write("\t\t\t<fieldset><legend><a name=\"fieldset\">方案二.从自己本地导入模板恢复</a></legend></fieldset>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div style=\"padding-left: 50px;\">\r\n");
      out.write("\t\t\t<button id=\"localhostTemplateFileId\" class=\"layui-btn layui-btn-primary\" style=\"font-size: 16px;\">导入本地模版</button>\r\n");
      out.write("\t\t\t<span style=\"padding-top:20px; color:#c2c2c2; float: left;\">\r\n");
      out.write("\t\t\t\t如果您现在的模板，之前有过以下其中一项：\r\n");
      out.write("\t\t\t\t\t<br/>&nbsp;&nbsp;1.&nbsp;&nbsp;备份(使用\"导出/备份\"功能导出过模板备份)\r\n");
      out.write("\t\t\t\t\t<br/>&nbsp;&nbsp;2.&nbsp;&nbsp;使用本地模板创建的网站\r\n");
      out.write("\t\t\t\t<br/>可以在此上传您电脑上的模版文件，将其应用(还原)到当前的网站。\r\n");
      out.write("\t\t\t</span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div>&nbsp;</div>\r\n");
      out.write("\r\n");
      out.write("<blockquote class=\"layui-elem-quote layui-quote-nm\" style=\"margin:3px;\">\r\n");
      out.write("\t如果您的网站模板被您改错了，想还原回来，可以使用此功能，将您的网站的\r\n");
      out.write("\t<ul style=\"padding-left:30px;\">\r\n");
      out.write("\t\t<li style=\"list-style-type: decimal;\">某个模板</li>\r\n");
      out.write("\t\t<li style=\"list-style-type: decimal;\">某个模板变量</li>\r\n");
      out.write("\t\t<li style=\"list-style-type: decimal;\">某个输入模型</li>\r\n");
      out.write("\t\t<li style=\"list-style-type: decimal;\">某个栏目</li>\r\n");
      out.write("\t\t<li style=\"list-style-type: decimal;\">任意组合，甚至可以全部还原</li>\r\n");
      out.write("\t</ul>\r\n");
      out.write("\t还原成\r\n");
      out.write("\t<ul style=\"padding-left:30px;\">\r\n");
      out.write("\t\t<li style=\"list-style-type: decimal;\">使用云端模板还原，还原为最初的样子</li>\r\n");
      out.write("\t\t<li style=\"list-style-type: decimal;\">使用本地导入(\"导出/备份\"导出的模板备份)进行还原，还原回你备份那一刻的样子</li>\r\n");
      out.write("\t</ul>\r\n");
      out.write("</blockquote>\r\n");
      out.write("\r\n");
      out.write("<script src=\"http://res.weiunity.com/layui2/layui.all.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("layui.use('element', function(){\r\n");
      out.write("\tvar element = layui.element;\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("layui.upload.render({\r\n");
      out.write("\telem: '#localhostTemplateFileId'\r\n");
      out.write("\t,url: '");
      out.print(basePath );
      out.write("template/restoreTemplateByLocalhostFile.do'\r\n");
      out.write("\t,field: 'templateFile'\r\n");
      out.write("\t,method :'post'\r\n");
      out.write("\t,exts: 'wscso|xnx3'\r\n");
      out.write("\t,title :'加载本地模版'\r\n");
      out.write("\t,before: function(input){\r\n");
      out.write("\t\t$.showLoading('载入中');\r\n");
      out.write("\t}\r\n");
      out.write("\t,done: function(res){\r\n");
      out.write("\t\t$.hideLoading();\r\n");
      out.write("\t    //上传成功返回值，必须为json格式\r\n");
      out.write("\t    if(res.result == '1'){\r\n");
      out.write("\t    \ttemplateComparePreview();\r\n");
      out.write("\t    }else{\r\n");
      out.write("\t    \tlayer.msg(res.info, {shade: 2});\r\n");
      out.write("\t    }\r\n");
      out.write("\t}\r\n");
      out.write("});\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//加载云端模版，触发选中云端模版还原\r\n");
      out.write("function getCloudTemplate(){\r\n");
      out.write("\tiw.loading(\"获取中\");\r\n");
      out.write("\t$.post('");
      out.print(basePath );
      out.write("template/restoreTemplateByRemote.do', function(data){\r\n");
      out.write("\t\tiw.loadClose();\r\n");
      out.write("\t\tif(data.result == '1'){\r\n");
      out.write("\t\t\ttemplateComparePreview();\r\n");
      out.write("\t \t}else if(data.result == '0'){\r\n");
      out.write("\t \t\tparent.iw.msgFailure(data.info);\r\n");
      out.write("\t \t}else{\r\n");
      out.write("\t \t\tparent.iw.msgFailure();\r\n");
      out.write("\t \t}\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//弹出模版比对窗口，选择要还原的项\r\n");
      out.write("//url:  相对路径，比如 template/restoreTemplateByRemote.do\r\n");
      out.write("function templateComparePreview(){\r\n");
      out.write("\tlayer.open({\r\n");
      out.write("\t\ttype: 2, \r\n");
      out.write("\t\ttitle:'还原模版，进行比对', \r\n");
      out.write("\t\tarea: ['800px', '560px'],\r\n");
      out.write("\t\tshadeClose: true, //开启遮罩关闭\r\n");
      out.write("\t\tcontent: '");
      out.print(basePath );
      out.write("template/restoreTemplateComparePreview.do'\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../iw/common/foot.jsp", out, false);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t    ");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t\t    ");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      if (!_jspx_th_c_005fchoose_005f0_reused) {
        _jspx_th_c_005fchoose_005f0.release();
        _jsp_getInstanceManager().destroyInstance(_jspx_th_c_005fchoose_005f0);
      }
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/view/template/restoreTemplate.jsp(67,7) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${usedYunTemplate}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t        <div style=\"float:left; padding-right: 25px;\">\r\n");
          out.write("\t\t\t        \t<img src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${template.previewPic}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" class=\"previewImg\" style=\"height:150px; width:auto;\"/>\r\n");
          out.write("\t\t\t\t\t\t<div class=\"previewButton\"><a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${template.previewUrl }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" target=\"_black\">预览模版</a></div>\r\n");
          out.write("\t\t\t\t\t\t<div class=\"templateName\" style=\"text-align: left;padding-left: 10px;\">编号:");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${template.name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</div>\r\n");
          out.write("\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t<div style=\"padding-top:10px;\">\r\n");
          out.write("\t\t\t\t\t\t<div>\r\n");
          out.write("\t\t\t\t\t\t\t<button onclick=\"getCloudTemplate();\" class=\"layui-btn layui-btn-primary\" style=\"font-size: 16px;\">云端初始模版还原</button>\r\n");
          out.write("\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t<div style=\"padding-top:20px; color:#c2c2c2; \">\r\n");
          out.write("\t\t\t\t\t\t\t您现在的模板是使用的云端模版，可以直接使用云端模版进行还原操作，还原回最初导入云端模版的样子\r\n");
          out.write("\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t\r\n");
          out.write("\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t        \r\n");
          out.write("\t\t\t    ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      if (!_jspx_th_c_005fwhen_005f0_reused) {
        _jspx_th_c_005fwhen_005f0.release();
        _jsp_getInstanceManager().destroyInstance(_jspx_th_c_005fwhen_005f0);
      }
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t        您当前使用的模板，非云端模板，无法使用云端恢复功能。\r\n");
          out.write("\t\t\t    ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      if (!_jspx_th_c_005fotherwise_005f0_reused) {
        _jspx_th_c_005fotherwise_005f0.release();
        _jsp_getInstanceManager().destroyInstance(_jspx_th_c_005fotherwise_005f0);
      }
    }
    return false;
  }
}
