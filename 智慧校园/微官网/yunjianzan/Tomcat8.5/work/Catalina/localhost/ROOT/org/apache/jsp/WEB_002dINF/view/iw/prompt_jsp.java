/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.11
 * Generated at: 2019-01-23 09:04:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.iw;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.xnx3.j2ee.Global;

public final class prompt_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/E:/Work/yunjianzan/Tomcat8.5/webapps/ROOT/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1430113524000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.xnx3.j2ee.Global");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("  \n");

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

String redirectUrl = request.getAttribute("redirectUrl").toString();
if(redirectUrl.indexOf("http")>-1){
}else if(redirectUrl.indexOf("avascript")>-1){
}else{
	redirectUrl = basePath+redirectUrl;
}

int state = (int)request.getAttribute("state");

Object infoObj = request.getAttribute("info");
String info = "";
if(infoObj != null){
	info = infoObj.toString();
}

String tishiIco = "&#xe605;"; //默认对号
if(state == Global.PROMPT_STATE_SUCCESS){
	tishiIco = "&#xe605;";
	if(info.equals("")){
		info = "执行成功";
	}
}else{
	tishiIco = "&#x1006;";
	if(info.equals("")){
		info = "执行失败";
	}
}


      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("  \t<meta charset=\"utf-8\">\n");
      out.write("    <title>提示</title>\n");
      out.write("\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\">\n");
      out.write("\t<link rel=\"stylesheet\" href=\"http://res.weiunity.com/layui/css/layui.css\">\n");
      out.write("\t<style>\n");
      out.write("\t\t.myForm{\n");
      out.write("\t\t\tmargin: 0 auto;\n");
      out.write("\t\t    width: 495px;\n");
      out.write("\t\t    height: auto;\n");
      out.write("\t\t    border-width: 1px 1px 1px 1px;\n");
      out.write("\t\t    padding: 0px;\n");
      out.write("\t\t    overflow: hidden;\n");
      out.write("\t\t    -webkit-box-shadow: 0 0 10px #e2e2e2;\n");
      out.write("\t\t    -moz-box-shadow: 0 0 10px #e2e2e2;\n");
      out.write("\t\t    box-shadow: 0 0 3px #e2e2e2;\n");
      out.write("\t\t    position: absolute;\n");
      out.write("\t\t    left: 50%;\n");
      out.write("\t\t    top: 50%;\n");
      out.write("\t\t    margin-left: -248px;\n");
      out.write("\t\t    margin-top: -181px;\n");
      out.write("\t\t    text-align: center;\n");
      out.write(" \t\t}\n");
      out.write(" \t\t.tishitubiao{\n");
      out.write("\t\t\tfloat:left;\n");
      out.write("\t\t\tmargin-left:70px;\n");
      out.write("\t\t\tpadding-bottom:20px;\n");
      out.write("\t\t\tpadding-right: 25px;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t@media screen and (max-width:600px){\n");
      out.write("\t\t\t.myForm{\n");
      out.write("\t\t\t\tmargin: 0 auto;\n");
      out.write("\t\t\t    width: 100%;\n");
      out.write("\t\t\t    height: 100%;\n");
      out.write("\t\t\t    border-width: 0px;\n");
      out.write("\t\t\t    padding: 0px;\n");
      out.write("\t\t\t    border-radius: 0px;\n");
      out.write("\t\t\t    overflow: auto;\n");
      out.write("\t\t\t    -webkit-box-shadow: 0 0 0px #e2e2e2;\n");
      out.write("\t\t\t    -moz-box-shadow: 0 0 0px #e2e2e2;\n");
      out.write("\t\t\t    box-shadow: 0 0 0px #e2e2e2;\n");
      out.write("\t\t\t    position: static;\n");
      out.write("\t\t\t    left: 0px;\n");
      out.write("\t\t\t    top: 0px;\n");
      out.write("\t\t\t    margin-left: 0px;\n");
      out.write("\t\t\t    margin-top: 0px;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t.tishitubiao{\n");
      out.write("\t\t\t\twidth:100%;\n");
      out.write("\t\t\t\tmargin-left:0px;\n");
      out.write("\t\t\t\tpadding-right: 0px;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t</style>\n");
      out.write("</head>\t\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<div class=\"myForm\" action=\"");
      out.print(basePath );
      out.write("loginSubmit.do\">\n");
      out.write("  <div style=\"padding-bottom: 60px; padding-top: 60px;\">\n");
      out.write("  \t\t<div class=\"tishitubiao\">\n");
      out.write("  \t\t\t<i class=\"layui-icon\" style=\"font-size: 120px; color: #5FB878;\">");
      out.print(tishiIco );
      out.write("</i>  \n");
      out.write("  \t\t</div>\n");
      out.write("  \t\t<div style=\"padding: 30px 50px 40px 50px; font-size: 22px;color: black;opacity: 0.9; min-height: 70px;\">\n");
      out.write("\t\t  \t\t");
      out.print(info );
      out.write("\n");
      out.write("\t\t  </div>\n");
      out.write("\t\t  <div style=\"font-size: 20px;opacity: 0.6;\">\n");
      out.write("\t\t  \t\t<span id=\"time\">3</span>秒后自动&nbsp;<b><a href=\"");
      out.print(redirectUrl );
      out.write("\" style=\"text-decoration: underline;\">跳转</a></b>&nbsp;...\n");
      out.write("\t\t  </div>\n");
      out.write("  \t\t\n");
      out.write("  </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("function run(){\n");
      out.write("    var s = document.getElementById(\"time\");\n");
      out.write("    if(s.innerHTML == 1){\n");
      out.write("        window.location.href='");
      out.print(redirectUrl );
      out.write("';\n");
      out.write("        return false;\n");
      out.write("    }\n");
      out.write("    s.innerHTML = s.innerHTML * 1 - 1;\n");
      out.write("}\n");
      out.write("window.setInterval(\"run();\", 1000);\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
