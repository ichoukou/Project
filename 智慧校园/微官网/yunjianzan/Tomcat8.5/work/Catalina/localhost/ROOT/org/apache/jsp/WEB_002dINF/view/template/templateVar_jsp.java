/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.11
 * Generated at: 2019-02-21 05:39:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.template;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.xnx3.j2ee.Global;
import com.xnx3.wangmarket.admin.G;

public final class templateVar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.xnx3.j2ee.Global");
    _jspx_imports_classes.add("com.xnx3.wangmarket.admin.G");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../iw/common/head.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("编辑模版变量", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 代码编辑模式所需资源 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"http://res.weiunity.com/editor/css/editormd.css\" />\r\n");
      out.write("<script src=\"http://res.weiunity.com/editor/editormd.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<form id=\"form\" class=\"layui-form layui-form-pane\" action=\"saveTemplateVar.do\" method=\"post\" style=\"padding:5px;\">\r\n");
      out.write("  <input type=\"hidden\" name=\"id\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${templateVar.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("  <div class=\"layui-form-item\" style=\"\">\r\n");
      out.write("    <label class=\"layui-form-label\">变量名</label>\r\n");
      out.write("    <div class=\"layui-input-inline\">\r\n");
      out.write("      <input type=\"text\" name=\"varName\" lay-verify=\"varName\" placeholder=\"请输入变量名字\" autocomplete=\"off\" class=\"layui-input\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${templateVar.varName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"layui-form-mid\" style=\" margin-top: -8px;\">\r\n");
      out.write("    \t可再模版中使用&nbsp;{include=变量名}&nbsp;调用<br/>\r\n");
      out.write("    \t建议设置后就不要对其进行改动了，模版页面调用、备份还原都是依据此处。\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"layui-form-item\" style=\"\">\r\n");
      out.write("    <label class=\"layui-form-label\">备注</label>\r\n");
      out.write("    <div class=\"layui-input-inline\">\r\n");
      out.write("      <input type=\"text\" name=\"remark\" lay-verify=\"remark\" placeholder=\"给自己备注，无其他作用\" autocomplete=\"off\" class=\"layui-input\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${templateVar.remark }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"layui-form-mid\">仅给网站操作人员备注提示使用，无实际作用</div>\r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"layui-form-item layui-form-text\" style=\"height: 80%;\">\r\n");
      out.write("    <label class=\"layui-form-label\">模版变量代码</label>\r\n");
      out.write("    <div class=\"layui-input-block\">\r\n");
      out.write("    \t<div id=\"htmlMode\" style=\"width:100%;height:auto; \">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div id=\"editormd\" style=\"width:100%; height:auto; min-height:400px;\">\r\n");
      out.write("\t\t\t\t<textarea id=\"html_textarea\" name=\"text\" lay-verify=\"text\" placeholder=\"请输入模版变量代码，注意，请不要将head、body标签放到模版变量里面！\" class=\"layui-textarea\" style=\"height: 95%;\">数据加载中...</textarea>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("        </div>\r\n");
      out.write("      \r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  <div style=\"font-size:14px; margin-top:-5px;\">\r\n");
      out.write("  \t\t可用标签：\r\n");
      out.write("    \t<a href=\"javascript:popupTemplateTagHelp('通用标签','http://tag.wscso.com/2936.html#%E6%A0%87%E7%AD%BE%E5%88%97%E8%A1%A8', '415', '590');\" style=\"border: 1px solid #e6e6e6; padding: 5px; padding-left: 8px; padding-right: 8px;\">通用标签</a>\r\n");
      out.write("    \t<a href=\"javascript:popupTemplateTagHelp('动态栏目调用','http://tag.wscso.com/2940.html#http://tag.wscso.com/2940.html','770', '560');\" style=\"border: 1px solid #e6e6e6; padding: 5px; padding-left: 8px; padding-right: 8px;\">动态栏目调用标签</a>\r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"layui-form-item\" style=\"text-align:center;\">\r\n");
      out.write("  \t<button class=\"layui-btn\" lay-submit=\"\" lay-filter=\"demo1\">保存</button>\r\n");
      out.write("  </div>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("layui.use(['form', 'layedit', 'laydate'], function(){\r\n");
      out.write("  var form = layui.form;\r\n");
      out.write(" \r\n");
      out.write("  //自定义验证规则\r\n");
      out.write("  form.verify({\r\n");
      out.write("    varName: function(value){\r\n");
      out.write("      if(value.length == 0){\r\n");
      out.write("        return '请输入变量的名字';\r\n");
      out.write("      }\r\n");
      out.write("      if(value.length > 20){\r\n");
      out.write("      \treturn '请输入20个字以内的变量名字';\r\n");
      out.write("      }\r\n");
      out.write("    }\r\n");
      out.write("  });\r\n");
      out.write("  \r\n");
      out.write("  //监听提交\r\n");
      out.write("  form.on('submit(demo1)', function(data){\r\n");
      out.write("\t\tparent.iw.loading('保存中');\r\n");
      out.write("\t\tvar d=$(\"form\").serialize();\r\n");
      out.write("        $.post(\"");
      out.print(basePath );
      out.write("template/saveTemplateVar.do\", d, function (result) { \r\n");
      out.write("        \tparent.iw.loadClose();\r\n");
      out.write("        \tvar obj = JSON.parse(result);\r\n");
      out.write("        \tif(obj.result == '1'){\r\n");
      out.write("        \t\tparent.iw.msgSuccess(\"保存成功\");\r\n");
      out.write("        \t\twindow.location.href=\"templateVarList.do\";\r\n");
      out.write("        \t}else if(obj.result == '0'){\r\n");
      out.write("        \t\tlayer.msg(obj.info, {shade: 0.3})\r\n");
      out.write("        \t}else{\r\n");
      out.write("        \t\tlayer.msg(result, {shade: 0.3})\r\n");
      out.write("        \t}\r\n");
      out.write("         }, \"text\");\r\n");
      out.write("\t\t\r\n");
      out.write("    return false;\r\n");
      out.write("  });\r\n");
      out.write("  \r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("/**\r\n");
      out.write(" * 弹出模版标签帮助窗口\r\n");
      out.write(" * @param title 窗口的标题文字\r\n");
      out.write(" * @param htmlNameTag 帮助的网址后面的描点名字\r\n");
      out.write(" * @param height 弹出窗口的宽度,整数。会自动拼接px\r\n");
      out.write(" * @param height 弹出窗口的高度,整数。会自动拼接px\r\n");
      out.write(" */ \r\n");
      out.write("function popupTemplateTagHelp(title,htmlNameTag, width, height){\r\n");
      out.write("\tvar url = '';\r\n");
      out.write("\tif(htmlNameTag.indexOf('http://') > -1){\r\n");
      out.write("\t\turl = htmlNameTag;\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\turl = 'http://res.weiunity.com/html/templateTag/index.html#'+htmlNameTag;\r\n");
      out.write("\t}\r\n");
      out.write("\tlayer.open({\r\n");
      out.write("\t\ttype: 2 //iframe\r\n");
      out.write("\t\t,title:title\r\n");
      out.write("\t\t,area: [width+'px', height+'px']\r\n");
      out.write("\t\t,shade: 0\r\n");
      out.write("\t\t,offset: [ //为了演示，随机坐标\r\n");
      out.write("\t\t\tMath.random()*($(window).height()-300)\r\n");
      out.write("\t\t\t,Math.random()*($(window).width()-390)\r\n");
      out.write("\t\t]\r\n");
      out.write(" \t\t,maxmin: true\r\n");
      out.write("\t\t,content: url\r\n");
      out.write("\t\t,zIndex: layer.zIndex //重点1\r\n");
      out.write("\t\t,success: function(layero){\r\n");
      out.write("\t\t\tlayer.setTop(layero); //重点2\r\n");
      out.write("  \t\t}\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//加载 模版变量 的内容\r\n");
      out.write("function loadTemplateVarText(){\r\n");
      out.write("\tparent.iw.loading(\"加载中\");    //显示“操作中”的等待提示\r\n");
      out.write("\t$.post(\"getTemplateVarText.do?varName=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${templateVar.varName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\", function(data){\r\n");
      out.write("\t    parent.iw.loadClose();    //关闭“操作中”的等待提示\r\n");
      out.write("\t    if(data.length == 0){\r\n");
      out.write("\t    \tdata = ' ';\r\n");
      out.write("\t    }\r\n");
      out.write("\t    \r\n");
      out.write("\t    \r\n");
      out.write("\t    //代码编辑器\r\n");
      out.write("\t\ttestEditor = editormd(\"editormd\", {\r\n");
      out.write("\t          width            : \"100%\",\r\n");
      out.write("\t          height            : \"650px\",\r\n");
      out.write("\t          watch            : false,\r\n");
      out.write("\t          toolbar          : false,\r\n");
      out.write("\t          codeFold         : true,\r\n");
      out.write("\t          searchReplace    : true,\r\n");
      out.write("\t          placeholder      : \"请输入模版变量的代码\",\r\n");
      out.write("\t          value            : data,\r\n");
      out.write("\t          theme            : \"default\",\r\n");
      out.write("\t          mode             : \"text/html\",\r\n");
      out.write("\t          path             : 'http://res.weiunity.com/editor/lib/'\r\n");
      out.write("\t      });\r\n");
      out.write("\t      \r\n");
      out.write("        \r\n");
      out.write("\t},\"text\");\r\n");
      out.write("}\r\n");
      out.write("loadTemplateVarText();\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
