/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.11
 * Generated at: 2019-02-21 00:46:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.news;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.xnx3.j2ee.Global;
import com.xnx3.wangmarket.admin.G;

public final class newsForTemplate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.xnx3.j2ee.Global");
    _jspx_imports_classes.add("com.xnx3.wangmarket.admin.G");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../iw/common/head.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("文章内容", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://res.weiunity.com/js/fun.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("/**\r\n");
      out.write(" * 编辑页面的内容代码， 同文章列表页的一样，复制于此\r\n");
      out.write(" * 页面类型为独立页面\r\n");
      out.write(" * @param name TemplatePage.name要编辑的模版页面名字\r\n");
      out.write(" */\r\n");
      out.write("function editText(name){\r\n");
      out.write("\tif(parent.currentMode == 2){\r\n");
      out.write("\t\t//要将其切换回智能模式\r\n");
      out.write("\t\tparent.window.htmledit_mode();\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tparent.document.getElementById(\"currentTemplatePageName\").value = name;\r\n");
      out.write("\tparent.loadIframe();\r\n");
      out.write("\t\r\n");
      out.write("\ttry{\r\n");
      out.write("\t\tparent.document.getElementById(\"currentTemplateType\").innerHTML = '详情页模版';\r\n");
      out.write("\t\tparent.document.getElementById(\"tongyong\").style.display = '';\r\n");
      out.write("\t\tparent.document.getElementById(\"lanmu\").style.display = '';\r\n");
      out.write("\t\tparent.document.getElementById(\"fenye\").style.display = 'none';\r\n");
      out.write("\t\tparent.document.getElementById(\"wenzhang\").style.display = '';\r\n");
      out.write("\t\tparent.document.getElementById(\"dongtailanmu\").style.display = '';\r\n");
      out.write("\t\tparent.document.getElementById(\"xiangqingduyou\").style.display = '';\r\n");
      out.write("\t\tparent.document.getElementById(\"liebiaoduyou\").style.display = 'none';\r\n");
      out.write("\t}catch(err){}\r\n");
      out.write("\t\r\n");
      out.write("\t//parent.document.getElementById('iframe').src='http://localhost:8080/selfSite/template/getTemplatePageText.do?pageName='+name;\r\n");
      out.write("\tparent.layer.close(index);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//判断文章所属的栏目，所属类型，若是独立页面，同时还是模板式编辑，那么直接进入模板编辑\r\n");
      out.write("if('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${siteColumn.type}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' == 3 && '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${siteColumn.editMode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' == 1){\r\n");
      out.write("\teditText('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${siteColumn.templatePageViewName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("');\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("/*input输入框下面的文字说明*/\r\n");
      out.write(".explain{\r\n");
      out.write("\tfont-size: 12px;\r\n");
      out.write("    color: gray;\r\n");
      out.write("    padding-top: 3px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<form id=\"form\" method=\"post\" class=\"layui-form\" enctype=\"multipart/form-data\" style=\"padding-top:35px; margin-bottom: 10px; padding-right:35px;\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"id\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${news.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("\t<input type=\"hidden\" name=\"cid\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${news.cid }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("\t<input type=\"hidden\" name=\"type\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${news.type }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("\t\r\n");
      out.write("\t");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${inputModelText }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\t<div class=\"layui-form-item\" style=\"padding-top:15px; text-align:center;\">\r\n");
      out.write("\t\t<div class=\"layui-input-block\">\r\n");
      out.write("\t\t\t<button class=\"layui-btn\" lay-submit=\"\" lay-filter=\"demo1\" style=\"width:150px; font-size: 16px; height: 45px;line-height: 45px;\">保存</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("try{\r\n");
      out.write("\tif('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${siteColumn.editUseTitlepic}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' == '1'){\r\n");
      out.write("\t\tdocument.getElementById('sitecolumn_editUseTitlepic').style.display='';\r\n");
      out.write("\t}\r\n");
      out.write("}catch(e){ }\r\n");
      out.write("try{\r\n");
      out.write("\tif('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${siteColumn.editUseExtendPhotos}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' == '1'){\r\n");
      out.write("\t\tdocument.getElementById('sitecolumn_editUseExtendPhotos').style.display='';\r\n");
      out.write("\t}\r\n");
      out.write("}catch(e){ }\r\n");
      out.write("try{\r\n");
      out.write("\tif('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${siteColumn.editUseIntro}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' == '1'){\r\n");
      out.write("\t\tdocument.getElementById('sitecolumn_editUseIntro').style.display='';\r\n");
      out.write("\t}\r\n");
      out.write("}catch(e){ }\r\n");
      out.write("try{\r\n");
      out.write("\tif('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${siteColumn.editUseText}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' == '1'){\r\n");
      out.write("\t\tdocument.getElementById('sitecolumn_editUseText').style.display='';\r\n");
      out.write("\t}\r\n");
      out.write("}catch(e){ }\r\n");
      out.write("\r\n");
      out.write("var uploadExtendPhotos = {\r\n");
      out.write("\t\telem: '.uploadImagesButton' //绑定元素\r\n");
      out.write("\t\t,url: parent.masterSiteUrl+'site/uploadImage.do' //上传接口\r\n");
      out.write("\t\t,field: 'image'\r\n");
      out.write("\t\t,accept: 'file'\r\n");
      out.write("\t\t,size: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${maxFileSizeKB}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("\t\t,exts:'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ossFileUploadImageSuffixList }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\t//可上传的文件后缀\r\n");
      out.write("\t\t,done: function(res){\r\n");
      out.write("\t\t\t//上传完毕回调\r\n");
      out.write("\t\t\tloadClose();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar key = this.item[0].name;\t//拿到传递参数的key，也就是 extend.photos 中，数组某项的下表\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(res.result == 1){\r\n");
      out.write("\t\t\t\ttry{\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"titlePicInput\"+key).value = res.url;\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"titlePicA\"+key).href = res.url;\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"titlePicImg\"+key).src = res.url;\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"titlePicImg\"+key).style.display='';\t//避免新增加的文章，其titlepicImg是隐藏的\r\n");
      out.write("\t\t\t\t}catch(err){}\r\n");
      out.write("\t\t\t\tparent.iw.msgSuccess(\"上传成功\");\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tparent.iw.msgFailure(res.info);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t,error: function(index, upload){\r\n");
      out.write("\t\t\t//请求异常回调\r\n");
      out.write("\t\t\tparent.iw.loadClose();\r\n");
      out.write("\t\t\tparent.iw.msgFailure();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t,before: function(obj){ //obj参数包含的信息，跟 choose回调完全一致，可参见上文。\r\n");
      out.write("\t\t\tparent.iw.loading('上传中..');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("var upload;\r\n");
      out.write("layui.use('upload', function(){\r\n");
      out.write("\tupload = layui.upload;\r\n");
      out.write("\t//上传图片,封面图\r\n");
      out.write("\t//upload.render(uploadPic);\r\n");
      out.write("\tupload.render({\r\n");
      out.write("\t\telem: \"#uploadImagesButton\" //绑定元素\r\n");
      out.write("\t\t,url: parent.masterSiteUrl+'site/uploadImage.do' //上传接口\r\n");
      out.write("\t\t,field: 'image'\r\n");
      out.write("\t\t,accept: 'file'\r\n");
      out.write("\t\t,size: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${maxFileSizeKB}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("\t\t,exts:'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ossFileUploadImageSuffixList }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\t//可上传的文件后缀\r\n");
      out.write("\t\t,done: function(res){\r\n");
      out.write("\t\t\t//上传完毕回调\r\n");
      out.write("\t\t\tloadClose();\r\n");
      out.write("\t\t\tif(res.result == 1){\r\n");
      out.write("\t\t\t\ttry{\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"titlePicInput\").value = res.url;\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"titlePicA\").href = res.url;\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"titlePicImg\").src = res.url;\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"titlePicImg\").style.display='';\t//避免新增加的文章，其titlepicImg是隐藏的\r\n");
      out.write("\t\t\t\t}catch(err){}\r\n");
      out.write("\t\t\t\tparent.iw.msgSuccess(\"上传成功\");\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tparent.iw.msgFailure(res.info);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t,error: function(index, upload){\r\n");
      out.write("\t\t\t//请求异常回调\r\n");
      out.write("\t\t\tparent.iw.loadClose();\r\n");
      out.write("\t\t\tparent.iw.msgFailure();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t,before: function(obj){ //obj参数包含的信息，跟 choose回调完全一致，可参见上文。\r\n");
      out.write("\t\t\tparent.iw.loading('上传中..');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t//上传图片,图集，v4.6扩展\r\n");
      out.write("\tupload.render(uploadExtendPhotos);\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("layui.use(['form', 'layedit', 'laydate'], function(){\r\n");
      out.write("  var form = layui.form;\r\n");
      out.write("  //监听提交\r\n");
      out.write("\tform.on('submit(demo1)', function(data){\r\n");
      out.write("\t\r\n");
      out.write("\t\t//判断是否有 save() 方法，若有，则先执行 save()  这个方法是用户在输入模型中自己定义的\r\n");
      out.write("\t\tif(typeof(save) == 'function'){\r\n");
      out.write("\t\t\ttry{\r\n");
      out.write("\t\t\t\tvar s_return = save();\r\n");
      out.write("\t\t\t\tif(typeof(s_return) == 'boolean' && s_return == false){\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}catch(err){}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\tparent.iw.loading(\"保存中\");    //显示“操作中”的等待提示\r\n");
      out.write("\t\t//创建FormData对象，获取到form表单的相关数据\r\n");
      out.write("\t\tvar formobj =  document.getElementById(\"form\");\r\n");
      out.write("\t\tvar data = new FormData(formobj);\r\n");
      out.write("\t\r\n");
      out.write("\t    //为FormData对象添加上传图片的数据，这里由3.11版本更新后，图片单独上传，此项废弃\r\n");
      out.write("\t    //$.each($('#titlePicFile')[0].files, function(i, file) {\r\n");
      out.write("\t    //    data.append('titlePicFile', file);\r\n");
      out.write("\t    //});\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl:'");
      out.print(basePath );
      out.write("news/saveNews.do',\r\n");
      out.write("\t        type:'POST',\r\n");
      out.write("\t        data:data,\r\n");
      out.write("\t        cache: false,\r\n");
      out.write("\t        contentType: false,    //不可缺\r\n");
      out.write("\t        processData: false,    //不可缺\r\n");
      out.write("\t        success:function(data){\r\n");
      out.write("\t        \tparent.iw.loadClose();    //关闭“操作中”的等待提示\r\n");
      out.write("\t        \tif(data.result == '1'){\r\n");
      out.write("\t\t\t        //上传成功\r\n");
      out.write("\t            \tparent.iw.msgSuccess('保存成功');\r\n");
      out.write("\t            \twindow.location.href='listForTemplate.do?cid=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${news.cid }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\t\t\t    }else if(data.result == '0'){\r\n");
      out.write("\t\t\t        parent.iw.msgFailure(data.info);\r\n");
      out.write("\t\t\t    }else{\r\n");
      out.write("\t\t\t        parent.iw.msgFailure();\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t        },\r\n");
      out.write("\t        error:function(){\r\n");
      out.write("\t        \tparent.iw.loadClose();    //关闭“操作中”的等待提示\r\n");
      out.write("\t        \tparent.iw.msgFailure('出错');\r\n");
      out.write("\t        }\r\n");
      out.write("\t\t});\r\n");
      out.write("    return false;\r\n");
      out.write("  });\r\n");
      out.write("  \r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("//载入素材库\r\n");
      out.write("function loadSuCai(){\r\n");
      out.write("\t//加载素材的支持库\r\n");
      out.write("\tdynamicLoading.js(resBasePath+\"ueditor/template/load.js\");\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
