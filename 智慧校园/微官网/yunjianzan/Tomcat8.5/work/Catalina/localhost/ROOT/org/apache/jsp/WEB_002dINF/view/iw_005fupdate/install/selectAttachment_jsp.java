/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.11
 * Generated at: 2019-01-23 09:05:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.iw_005fupdate.install;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class selectAttachment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/E:/Work/yunjianzan/Tomcat8.5/webapps/ROOT/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1430113524000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("  \n");

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../iw/common/head.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("设置选择文件存储方式", request.getCharacterEncoding()), out, false);
      out.write("\n");
      out.write("\n");
      out.write("<style>\n");
      out.write(".layui-form-label{\n");
      out.write("\twidth:180px;\n");
      out.write("}\n");
      out.write(".layui-input-block{\n");
      out.write("\tmargin-left: 210px;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<div style=\"padding:30px; padding-bottom:10px; text-align:center; font-size:30px;\">\n");
      out.write("\t选择使用方式\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class=\"select\">\n");
      out.write("\t\n");
      out.write("\t<div class=\"selectItem\" onclick=\"window.location.href='setAttachmentMode.do?mode=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${AttachmentFile_MODE_LOCAL_FILE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\">\n");
      out.write("\t\t<div class=\"title\">免费版</div>\n");
      out.write("\t\t<div class=\"intro\">\n");
      out.write("\t\t\t<br/>服务器存储\n");
      out.write("\t\t\t<ul class=\"lilist\"> \n");
      out.write("\t\t\t\t<li>安装方便，一键运行</b></li>\n");
      out.write("\t\t\t\t<li>使用 Sqlite 数据库</li>\n");
      out.write("\t\t\t\t<li>可用于商业用途</li>\n");
      out.write("\t\t\t\t<li>可开通数千网站</li>\n");
      out.write("\t\t\t</ul>\n");
      out.write("\t\t\t使用运行程序的服务器本身作为存储对象，会在程序根目录下创建site文件夹存储文件，传统文件存储方式。将生成的html页面、上传的图片，都存储在代码所在的服务器上。\n");
      out.write("\t\t\t<br/>优点：简单，免费！可快速使用，无需再掌握其他知识。\n");
      out.write("\t\t\t<br/>缺点：无法分布式部署。网站个数建议在500个以内。另外使用请看帮助说明 <a href=\"http://help.wscso.com\" target=\"_black\">help.wscso.com</a> 或者加入QQ群472328584讨论交流，免费版我们不提供技术客服，请各位谅解。如果您想获得更好的服务，以及更好用它来服务客户，想更好的赚钱，欢迎联系我们购买授权版本。\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t\n");
      out.write("\t<br/>\n");
      out.write("\t\n");
      out.write("\t<div class=\"selectItem\" id=\"yun\" onmouseenter=\"qiehuanshouquan();\" onmouseleave=\"qiehuanshouquanyuanshi();\" onclick=\"window.open('http://www.wang.market/price.html')\">\n");
      out.write("\t\t<div class=\"title\">收费版</div>\n");
      out.write("\t\t<!-- setAttachmentMode.do?mode=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${AttachmentFile_MODE_ALIYUN_OSS}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" -->\n");
      out.write("\t</div>\n");
      out.write("\t<div style=\"display:none;\" id=\"weishouquanyun\">\n");
      out.write("\t\t<div class=\"title\">收费版</div>\n");
      out.write("\t\t<div class=\"intro\">\n");
      out.write("\t\t\t云端存储，无限扩展、速度更快、数据更安全！\n");
      out.write("\t\t\t<br/>优点：\n");
      out.write("\t\t\t\t\t<ul class=\"lilist\"> \n");
      out.write("\t\t\t\t\t\t<li>我们帮你安装调试好，你只管用！</li>\n");
      out.write("\t\t\t\t\t\t<li>使用Mysql数据库</li>\n");
      out.write("\t\t\t\t\t\t<li>我方可帮你选择阿里云服务器规格及购买。仅此项，就可以让你<b>省不止500元！</b></li>\n");
      out.write("\t\t\t\t\t\t<li>少走弯路，技术指导，有不懂的地方可以向我们咨询，帮你快速掌握使用技巧。</li>\n");
      out.write("\t\t\t\t\t\t<li>正版授权，去我方版权标识</li>\n");
      out.write("\t\t\t\t\t\t<li>可分布式部署，无网站个数限制</li>\n");
      out.write("\t\t\t\t\t\t<li>使用CDN加速，网站极速访问</li>\n");
      out.write("\t\t\t\t\t\t<li>增加访问统计、操作日志等功能</li>\n");
      out.write("\t\t\t\t\t\t<li>可配置多个域名解析绑定服务器，如一台香港的可绑定不需要备案的域名，一台国内的绑定已备案的域名</li>\n");
      out.write("\t\t\t\t\t</ul>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t<div style=\"display:none;\" id=\"shouquanxinxi\">\n");
      out.write("\t\t<div class=\"title\">收费版</div>\n");
      out.write("\t\t<div style=\"font-size: 38px;color: red;\">\n");
      out.write("\t\t\t需我方授权！\n");
      out.write("\t\t\t<br/>\n");
      out.write("\t\t\t授权费用 ：500元/年、 或5000元永久\n");
      out.write("\t\t\t<br/>\n");
      out.write("\t\t\t永久使用。\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t\n");
      out.write("</div>\n");
      out.write("<br/>\n");
      out.write("\n");
      out.write("<style>\n");
      out.write(".first{background-color: #5FB878;}\n");
      out.write(".select{\n");
      out.write("\tpadding:20px;\n");
      out.write("}\n");
      out.write(".select>div{\n");
      out.write("\tpadding: 30px;\n");
      out.write("    border: 1px;\n");
      out.write("    border-style: solid;\n");
      out.write("    border-color: #d2d2d2;\n");
      out.write("}\n");
      out.write(".select div .title{\n");
      out.write("\tfont-size: 20px;\n");
      out.write("}\n");
      out.write(".select div .intro{\n");
      out.write("\tfont-size: 14px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write(".lilist{\n");
      out.write("\tpadding-left: 40px;\n");
      out.write("}\n");
      out.write(".lilist>li{\n");
      out.write("\tlist-style: decimal;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".selectItem{\n");
      out.write("\tcursor: pointer;\n");
      out.write("}\n");
      out.write(".selectItem:HOVER{\n");
      out.write("\tborder-color: #000000;\n");
      out.write("\tbackground-color: #FAFAFA;\n");
      out.write("}\n");
      out.write("</style>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "common.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("function qiehuanshouquan(){\n");
      out.write("\tdocument.getElementById('yun').innerHTML = document.getElementById('shouquanxinxi').innerHTML; \n");
      out.write("}\n");
      out.write("//用户鼠标移开，显示云版本的功能\n");
      out.write("function qiehuanshouquanyuanshi(){\n");
      out.write("\tdocument.getElementById('yun').innerHTML = document.getElementById('weishouquanyun').innerHTML;\n");
      out.write("}\n");
      out.write("qiehuanshouquanyuanshi();\n");
      out.write("</script>\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../iw/common/foot.jsp", out, false);
      out.write(' ');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
