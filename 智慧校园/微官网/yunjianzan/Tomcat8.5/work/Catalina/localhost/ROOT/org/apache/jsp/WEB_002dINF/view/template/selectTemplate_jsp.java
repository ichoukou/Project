/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.11
 * Generated at: 2019-01-23 09:21:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.template;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.xnx3.j2ee.Global;

public final class selectTemplate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("jar:file:/E:/Work/yunjianzan/Tomcat8.5/webapps/ROOT/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("jar:file:/E:/Work/yunjianzan/Tomcat8.5/webapps/ROOT/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1430113524000L));
    _jspx_dependants.put("/WEB-INF/lib/xnx3_tld.jar", Long.valueOf(1512734430000L));
    _jspx_dependants.put("jar:file:/E:/Work/yunjianzan/Tomcat8.5/webapps/ROOT/WEB-INF/lib/xnx3_tld.jar!/META-INF/xnx3.tld", Long.valueOf(1495004768000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.xnx3.j2ee.Global");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../iw/common/head.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("选择模版", request.getCharacterEncoding()), out, false);
      out.write("\n");
      out.write("<link rel=\"stylesheet\" href=\"http://res.weiunity.com/css/layerGlobal.css\" media=\"all\">\n");
      out.write("\n");
      out.write("<!-- author:管雷鸣 -->\n");
      out.write("<style>\n");
      out.write(".list{\n");
      out.write("\tpadding-left: 50px;\n");
      out.write("}\n");
      out.write(".list>div{\n");
      out.write("\tfloat:left;\n");
      out.write("\twidth:24%;\n");
      out.write("\tpadding:0.5%;\n");
      out.write("}\n");
      out.write(".list>div>div{\n");
      out.write("\tpadding-bottom: 35px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/*预览图*/\n");
      out.write(".previewImg{\n");
      out.write("\twidth:100%;\n");
      out.write("\tcursor: pointer;\n");
      out.write("}\n");
      out.write("/*预览按钮*/\n");
      out.write(".previewButton{\n");
      out.write("\tmargin-top: -30px;\n");
      out.write("\ttext-align: right;\n");
      out.write("\toverflow-x: hidden;\n");
      out.write("}\n");
      out.write(".previewButton a{\n");
      out.write("    background-color: #FF5722;\n");
      out.write("    border-radius: 15px;\n");
      out.write("    padding: 3px;\n");
      out.write("    padding-left: 12px;\n");
      out.write("    padding-right: 22px;\n");
      out.write("    cursor: pointer;\n");
      out.write("    color: #eeeeee;\n");
      out.write("    font-size: 18px;\n");
      out.write("    margin-right: -12px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/*模版名字，编号*/\n");
      out.write(".templateName{\n");
      out.write("\twidth:100%;\n");
      out.write("\ttext-align:center;\n");
      out.write("\tcolor:#2F4056;\n");
      out.write("\tpadding-top: 8px;\n");
      out.write("\tcursor: pointer;\n");
      out.write("}\n");
      out.write("/*模版简介说明*/\n");
      out.write(".info{\n");
      out.write("\tcolor:#c2c2c2;\n");
      out.write("\tfont-size: 14px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#template_type>a{\n");
      out.write("\tborder:0px;\n");
      out.write("\tmargin-left:10px;\n");
      out.write("\tfont-size:16px;\n");
      out.write("}\n");
      out.write("#template_type>a:before{\n");
      out.write("\tcontent: \"|\";\n");
      out.write("    color: #946c6c;\n");
      out.write("    padding-right: 12px;\n");
      out.write("    font-weight: 400;\n");
      out.write("}\n");
      out.write(".terminal{\n");
      out.write("\tfont-size: 13px;\n");
      out.write("    color: gray;\n");
      out.write("}\n");
      out.write(".terminal span{\n");
      out.write("\tpadding:3px;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("<body>\n");
      out.write("<div style=\"padding: 12px;font-weight: 700;padding-left: 32px;color: red; font-size: 20px;\">\n");
      out.write("\t注意，当您使用了一个模版后，将无法再使用其他模版！如果要更换模版，可以再重新建立一个网站。\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class=\"site-title\">\n");
      out.write("\t<fieldset><legend><a name=\"fieldset\">方案一.不使用模版，自己从头开始做一套模版</a></legend></fieldset>\n");
      out.write("</div>\n");
      out.write("<div style=\"padding-left: 50px;\">\n");
      out.write("\t<span style=\"padding-left:10px; color:#c2c2c2;\">注意，此种方式需要您简单掌握HTML的相关知识才可！入门非常简单，<a href=\"javascript:parent.templateDevHelp();\" style=\"color: blue;text-decoration: underline;\">");
      out.print(Global.get("SITE_NAME") );
      out.write("模板制作入门点此查看</a>，一小时内学会自己做模版，成大神！</span>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("<div style=\"height:20px; width:100%;\">&nbsp;</div>\n");
      out.write("<div class=\"site-title\">\n");
      out.write("\t<fieldset><legend><a name=\"fieldset\">方案二.使用自己本地模版</a></legend></fieldset>\n");
      out.write("</div>\n");
      out.write("<div style=\"padding-left: 50px;\">\n");
      out.write("\t<button type=\"button\" class=\"layui-btn layui-btn-primary\" id=\"loadLocalTemplateFile\">\n");
      out.write("\t\t<i class=\"layui-icon\">&#xe67c;</i>上传本地模版\n");
      out.write("\t</button>\n");
      out.write("\t<span style=\"padding-left:10px; color:#c2c2c2;\">如果您有自己的模版，可以在此上传您自己的模版文件(导出模版功能导出的文件)，将其应用于当前的网站。</span>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div style=\"height:20px; width:100%;\">&nbsp;</div>\n");
      out.write("<div class=\"site-title\">\n");
      out.write("\t<fieldset><legend><a name=\"fieldset\">方案三.使用云端现有模版</a>&nbsp;&nbsp;<b>(推荐)</b></legend></fieldset>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div style=\"width: 100%; padding-left: 20px; padding-right: 20px; box-sizing: border-box;\" id=\"template_type\">\n");
      out.write("\t加载中...\n");
      out.write("</div>\n");
      out.write("<div class=\"list\" id=\"cloudList\">\n");
      out.write("\t\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("layui.use('element', function(){\n");
      out.write("\tvar element = layui.element;\n");
      out.write("});\n");
      out.write("\n");
      out.write("var typeArray = '广告设计|学校培训|五金制造|门窗卫浴|IT互联网|化工环保|建筑能源|智能科技|房产物业|金融理财|工商法律|人力产权|生活家政|服装饰品|医疗保健|装修装饰|摄影婚庆|家具数码|茶酒果蔬|组织政府|餐饮酒店|旅游服务|汽车汽配|畜牧种植|体育健身|儿童玩具|个人博客|文档资料'.split(\"|\");\n");
      out.write("//初始化模版列表的type\n");
      out.write("function initType(){\n");
      out.write("\tvar html = '<a href=\"javascript:typeClick(-1);\" class=\"templateType\" id=\"type_-1\">全部模版</a>';\n");
      out.write("\tfor(var i = 0; i < typeArray.length; i++){\n");
      out.write("\t\thtml = html+'<a href=\"javascript:typeClick('+i+');\" class=\"templateType\" id=\"type_'+i+'\">'+typeArray[i]+'</a>';\n");
      out.write("\t}\n");
      out.write("\tdocument.getElementById('template_type').innerHTML = html;\n");
      out.write("}\n");
      out.write("//type点击触发\n");
      out.write("function typeClick(type){\n");
      out.write("\t//将所有type还原会原本样子\n");
      out.write("\t$(\".templateType\").css(\"font-size\",\"16px\");\n");
      out.write("\t$(\".templateType\").css(\"color\",\"black\");\n");
      out.write("\t\n");
      out.write("\t//将选中的这个设置颜色\n");
      out.write("\tdocument.getElementById('type_'+type).style.fontSize='19px';\n");
      out.write("\tdocument.getElementById('type_'+type).style.color='red';\n");
      out.write("\n");
      out.write("\tdocument.getElementById(\"cloudList\").innerHTML = '<div style=\"font-size: 30px;padding-top: 10%;color: lightgrey; text-align:center;width: 100%;box-sizing: border-box;\">加载中...</div>';\n");
      out.write("\t//若使用云端模版库，则可以将下面请求地址换为 http://wang.market/cloudTemplateList.do\n");
      out.write("\t//使用当前配置文件的模版，则为：");
      out.print(basePath );
      out.write("cloudTemplateList.do\n");
      out.write("\t$.getJSON('");
      out.print(basePath );
      out.write("template/getTemplateList.do?type='+type,function(obj){\n");
      out.write("\t\tvar html = '';\t//云端模版的列表\n");
      out.write("\t\t\tif(obj.result == '1'){\n");
      out.write("\t\t\t\tvar divArray = new Array();\t//共分四列，也就是下标为0～3\n");
      out.write("\t\t\t\tfor(var i=0; i<obj.list.length; i++){\n");
      out.write("\t\t\t\t\tvar xiabiao = i%4;\t//取余，得数组下表\n");
      out.write("\t\t\t\t\tvar to = obj.list[i];\n");
      out.write("\t\t\t\t\tvar temp = '<div>'+\n");
      out.write("\t\t\t\t\t\t\t\t'<img src=\"'+to.previewPic+'\" class=\"previewImg\" onclick=\"useCloudTemplate(\\''+to.name+'\\');\" />'+\n");
      out.write("\t\t\t\t\t\t\t\t'<div class=\"previewButton\"><a href=\"javascript:window.open(\\''+to.previewUrl+'\\');\" target=\"_black\">点此预览</a></div>'+\n");
      out.write("\t\t\t\t\t\t\t\t'<div class=\"templateName\" onclick=\"useCloudTemplate(\\''+to.name+'\\');\">模版编码：'+to.name+'</div>'+\n");
      out.write("\t\t\t\t\t\t\t\t'<div class=\"terminal\">访问支持：'+\n");
      out.write("\t\t\t\t\t\t\t\t\t(to.terminalPc? '<span>电脑端</span>':'')+\n");
      out.write("\t\t\t\t\t\t\t\t\t(to.terminalMobile? '<span>手机端</span>':'')+\n");
      out.write("\t\t\t\t\t\t\t\t\t(to.terminalIpad? '<span>平板</span>':'')+\n");
      out.write("\t\t\t\t\t\t\t\t\t(to.terminalDisplay? '<span>展示机</span>':'')+\n");
      out.write("\t\t\t\t\t\t\t\t'</div>'+\n");
      out.write("\t\t\t\t\t\t\t\t'<div class=\"info\">'+to.remark+'</div>'+\n");
      out.write("\t\t\t\t\t\t\t\t'<div class=\"info\">提供者：'+(to.companyname.length > 0 ? (to.companyname == '潍坊雷鸣云网络科技有限公司'? '官方':to.companyname):to.username)+'</div>'+\n");
      out.write("\t\t\t\t\t\t \t\t'</div>';\n");
      out.write("\t\t\t\t\tif(divArray[xiabiao] == null){\n");
      out.write("\t\t\t\t\t\tdivArray[xiabiao] = '';\n");
      out.write("\t\t\t\t\t}\t \t\t\n");
      out.write("\t\t\t\t\tdivArray[xiabiao] = divArray[xiabiao] + temp;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t//将四个div分别遍历，组合成显示的html\n");
      out.write("\t\t\t\tfor(var i=0; i<divArray.length; i++){\n");
      out.write("\t\t\t\t\thtml = html + '<div>' + divArray[i] +'</div>';\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tdocument.getElementById(\"cloudList\").innerHTML = html;\n");
      out.write("\t     \t}else if(obj.result == '0'){\n");
      out.write("\t     \t\t $.toast(obj.info, \"cancel\", function(toast) {});\n");
      out.write("\t     \t}else{\n");
      out.write("\t     \t\talert(obj.result);\n");
      out.write("\t     \t}\n");
      out.write("\t\t});\n");
      out.write("\t\n");
      out.write("}\n");
      out.write("initType();\n");
      out.write("typeClick(-1);\t//默认加载中所有模版\n");
      out.write("\n");
      out.write("layui.use('upload', function(){\n");
      out.write("\tlayui.upload.render({\n");
      out.write("\t  url: '");
      out.print(basePath );
      out.write("template/uploadImportTemplate.do'\n");
      out.write("\t  ,method :'post'\n");
      out.write("\t  ,elem : '#loadLocalTemplateFile'\n");
      out.write("\t  ,exts: 'wscso|xnx3|zip'\n");
      out.write("\t  ,field: 'templateFile'\n");
      out.write("\t  ,title :'加载本地模版'\n");
      out.write("\t  ,size: '50000'\t//50MB ，这里单位是KB\n");
      out.write("\t  ,before: function(res){\n");
      out.write("\t\t$.showLoading('上传中');\n");
      out.write("\t  }\n");
      out.write("\t  ,done: function(res, index, upload){\n");
      out.write("\t    //上传成功返回值，必须为json格式\n");
      out.write("\t    if(res.result == '1'){\n");
      out.write("\t    \t$.toast(\"模版加载成功\", function() {\n");
      out.write("\t\t\t\tparent.window.location.reload();\t//刷新当前页\n");
      out.write("\t\t\t});\n");
      out.write("\t    }else{\n");
      out.write("\t    \talert(res.info);\n");
      out.write("\t    }\n");
      out.write("\t  }\n");
      out.write("\t}); \n");
      out.write("});\n");
      out.write("\n");
      out.write("//使用某个云端模版，传入其模版名、编号 templateName\n");
      out.write("function useCloudTemplate(templateName){\n");
      out.write("\tvar dtp_confirm = layer.confirm('确定要使用编号为“'+templateName+'”的模版？', {\n");
      out.write("\t  btn: ['立即使用','取消'] //按钮\n");
      out.write("\t}, function(){\n");
      out.write("\t\tlayer.close(dtp_confirm);\n");
      out.write("\t\t\n");
      out.write("\t\tiw.loading(\"加载中\");\n");
      out.write("\t\t$.post('");
      out.print(basePath );
      out.write("template/remoteImportTemplate.do?templateName='+templateName, function(data){\n");
      out.write("\t\t\tiw.loadClose();\n");
      out.write("\t\t\tif(data.result == '1'){\n");
      out.write("\t\t\t\tparent.iw.msgSuccess(\"加载成功\");\n");
      out.write("\t\t\t\t//进入内容管理中\n");
      out.write("\t\t\t\tparent.loadIframeByUrl('");
      out.print(basePath);
      out.write("template/welcome.do');\n");
      out.write("\t\t \t}else if(data.result == '0'){\n");
      out.write("\t\t \t\tparent.iw.msgFailure(data.info);\n");
      out.write("\t\t \t}else{\n");
      out.write("\t\t \t\tparent.iw.msgFailure();\n");
      out.write("\t\t \t}\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t}, function(){\n");
      out.write("\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
