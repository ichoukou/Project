/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.11
 * Generated at: 2019-02-21 01:37:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.news;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.xnx3.j2ee.Global;

public final class newsChangeColumnForSelectColumn_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1550709623293L));
    _jspx_dependants.put("/WEB-INF/lib/xnx3_tld.jar", Long.valueOf(1550709623439L));
    _jspx_dependants.put("jar:file:/E:/github/Project/智慧校园/微官网/yunjianzan/Tomcat8.5/webapps/ROOT/WEB-INF/lib/xnx3_tld.jar!/META-INF/xnx3.tld", Long.valueOf(1495004768000L));
    _jspx_dependants.put("jar:file:/E:/github/Project/智慧校园/微官网/yunjianzan/Tomcat8.5/webapps/ROOT/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("jar:file:/E:/github/Project/智慧校园/微官网/yunjianzan/Tomcat8.5/webapps/ROOT/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.xnx3.j2ee.Global");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("\r\n");

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../iw/common/head.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("选择栏目", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".body{\r\n");
      out.write("\tmargin: 0;padding: 0px;height: 100%;overflow: hidden;\r\n");
      out.write("}\r\n");
      out.write(".menu{\r\n");
      out.write("\twidth:160px;\r\n");
      out.write("\theight:100%;\r\n");
      out.write("\tbackground-color: #EAEDF1;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 左侧栏目列表的文字 */\r\n");
      out.write(".layui-nav-tree .layui-nav-item a{\r\n");
      out.write("\tcolor:#333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*鼠标移动到某项后的样式*/\r\n");
      out.write(".layui-nav-tree .layui-nav-item a:hover:HOVER{\r\n");
      out.write("\tbackground-color: #f4f6f8;\r\n");
      out.write("\tcolor:#222;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*子栏目*/\r\n");
      out.write(".layui-nav-tree .layui-nav-item dl dd a{\r\n");
      out.write("\tpadding-left:35px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".dltitle{\r\n");
      out.write("\tbackground-color: #EAEDF1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".layui-nav-itemed>a, .layui-nav-tree .layui-nav-title a, .layui-nav-tree .layui-nav-title a:hover {\r\n");
      out.write("    background-color: #EAEDF1!important;\r\n");
      out.write("    color: #222!important;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".table>thead>tr>th, .table>tbody>tr>th, .table>tfoot>tr>th{\r\n");
      out.write("\tline-height: 2.2;\r\n");
      out.write("\ttext-align:center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".layui-nav-child dd{\r\n");
      out.write("\tbackground-color: #EAEDF1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".layui-nav .layui-nav-item .layui-nav-more{\r\n");
      out.write("\tborder-top-color: rgba(64, 34, 34, 0.7);\r\n");
      out.write("}\r\n");
      out.write("/*有二级栏目的，二级栏目伸缩的时候，右侧的小尖头的颜色*/\r\n");
      out.write(".layui-nav .layui-nav-itemed .layui-nav-more{\r\n");
      out.write("\tborder-top-color: rgba(64, 34, 34, 0);\r\n");
      out.write("\tborder-color: transparent transparent #a42828;\r\n");
      out.write("}\r\n");
      out.write("    \r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<table class=\"layui-table\" style=\"margin-top:-1px;\">\r\n");
      out.write("\t<tbody>\r\n");
      out.write("\t\t");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${columnTreeNav }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("\t</tbody>\r\n");
      out.write("</table>\r\n");
      out.write("<div style=\"padding: 10px; font-size:14px; color:gray;\">\r\n");
      out.write("\t<b>提示</b>：灰色的代表不能移入。\r\n");
      out.write("\t<br/>文章只能移动到栏目类型为图片列表或者新闻列表的，列表栏目中去\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("//自适应弹出层大小\r\n");
      out.write("var index = parent.layer.getFrameIndex(window.name); //获取窗口索引\r\n");
      out.write("parent.layer.iframeAuto(index);\r\n");
      out.write("\r\n");
      out.write("layui.use(['form', 'layedit', 'laydate'], function(){\r\n");
      out.write("  var form = layui.form;\r\n");
      out.write("  \r\n");
      out.write("  //监听提交\r\n");
      out.write("  form.on('submit(demo1)', function(data){\r\n");
      out.write("  \t  $.showLoading('栏目保存中');\r\n");
      out.write("\t\tvar d=$(\"form\").serialize();\r\n");
      out.write("        \r\n");
      out.write("\t\t\r\n");
      out.write("    return false;\r\n");
      out.write("  });\r\n");
      out.write("  \r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("//选择指定的栏目进行移动文章 targetColumnId 要移动到哪个栏目的id\r\n");
      out.write("function selectColumn(targetColumnId){\r\n");
      out.write("\tiw.loading(\"转移中\");\r\n");
      out.write("\t$.post(\"");
      out.print(basePath );
      out.write("news/newsChangeColumnForSelectColumnSubmit.do?newsid=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${newsid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&targetColumnId=\"+targetColumnId, function(data){\r\n");
      out.write("\t\tiw.loadClose();\r\n");
      out.write("\t\tif(data.result == '1'){\r\n");
      out.write("\t\t\tparent.iw.msgSuccess(\"操作成功\");\r\n");
      out.write("       \t\tparent.location.reload();\t//刷新父窗口\r\n");
      out.write("       \t\tparent.layer.close(index);\r\n");
      out.write("\t \t}else if(data.result == '0'){\r\n");
      out.write("\t \t\tparent.iw.msgFailure(data.info);\r\n");
      out.write("\t \t}else{\r\n");
      out.write("\t \t\tparent.iw.msgFailure();\r\n");
      out.write("\t \t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
